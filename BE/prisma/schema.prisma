generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  email        String       @unique
  password     String
  name         String?
  bio          String?
  age          Int?
  gender       String?
  address      String?
  avatar       String?
  birthDate    DateTime?
  phone        String?      
  location     String?
  portfolio    String?
  education    Education[]
  skills       Skill[]
  experience   Experience[]
  hobbies      Hobby[]
  refreshToken String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}
model Education {
  id String @id @default(uuid())

  Profile User?   @relation(fields: [userId], references: [id])
  userId  String?

  institute    String
  degree       Degree?
  fieldOfStudy String?
  startDate    DateTime
  endTime      DateTime?
  certificate  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Skill {
  id String @id @default(uuid())

  Profile User?   @relation(fields: [userId], references: [id])
  userId  String?

  name        String
  level       SkillLevel? @default(BEGINNER)
  certificate String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Experience {
  id          String    @id @default(uuid())
  Profile     User?     @relation(fields: [userId], references: [id])
  userId      String?
  
  company     String
  role        String
  startDate   DateTime
  endDate     DateTime?
  description String?
  certificate String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Hobby {
  id      String  @id @default(uuid())
  Profile User?   @relation(fields: [userId], references: [id])
  userId  String?
  name    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum SkillLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum Degree {
  X
  XII
  BACHELOR
  MASTER
  PhD
}
